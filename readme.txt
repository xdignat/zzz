Игнатьев Дмитрий

---------------------------------------------------
Тестовое задание на позицию php бэкенд разработчика
---------------------------------------------------
 
Реализовать API для подписки на новости.
 
API должно выполнять следующие задачи:
1. Подписка пользователя по email на нужную рубрику
2. Удаление подписки на конкретную рубрику
3. Удаление подписки на все рубрики
4. Отображение подписок пользователя и отображение всех пользователей переданной рубрики * Эти данные должны быть доступны только после авторизации. Например через открытый\закрытый ключ с последующим использование токена. (Ключи выдаются доверенному приложению которое и будет отображать данные из API (реализация приложения не требуется)) * Так как этих данных может быть много, то этим методы должны принимать дополнительные параметры limit и offset ограничивающие выдачу.
5. Поддержка версионности API с наследованием функционала. Версия передается в заголовке request. * В v2 нужно добавить:
   - К методу подписки обязательный параметр "Имя пользователя".
   - Новый метод который генерирует ключ для возможности отписки. Этот ключ должен быть уникальным для каждой рубрики у каждого пользователя. Метод для удалении подписки должен принимать этот ключ вторым параметром.
   - Уметь отдавать ответы в разных форматах (json\xml) на выбор.
 
##Требования
1. Фреймворк Laravel 5 (на самом деле любой современный фреймворк подойдет, но Laravel предпочтительнее так как мы разрабатываем с его использованием)
2. Миграции
3. Валидация параметров.



---------------------------------------------------
История
---------------------------------------------------

1. Название проекта 
   zzz

2. Создание скелета
   composer create-project --prefer-dist laravel/laravel zzz
   # composer create-project laravel/laravel your-project-name 5.6.*
   docker run --rm -v $(pwd):/app composer install
   docker-compose run --rm composer install

3. Инициализация docker-compose и папок
   env, Dockerfile, docker-compose.yml

4. docker-compose build app

5. docker-compose up -d

6. docker-compose exec app composer update --lock

7. Самоподписный сертификат
   sudo openssl req -x509 -nodes -days 999 -newkey rsa:2048 -keyout ~/temp/nginx-selfsigned.key -out ~/temp/nginx-selfsigned.crt

8. миграции
   docker-compose exec app php artisan migrate:install